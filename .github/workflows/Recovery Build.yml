name: TWRP Recovery Build - Motorola Capri

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/Jammy555/android_device_motorola_capri'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'twrp2'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/motorola/capri'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
        default: 'https://github.com/motorola/capri-common'
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
        default: 'device/motorola/capri-common'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'capri'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'twrp_capri'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recovery'
      DEBUG_MODE:
        description: 'Enable debug mode for troubleshooting'
        required: false
        default: 'true'
        type: boolean

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "Debug Mode: ${{ github.event.inputs.DEBUG_MODE }}"
        echo "::endgroup::"

    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v4

    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps

    - name: Prepare the environment
      run: |
        sudo apt update && sudo apt upgrade -y
        DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            linux-modules-extra-$(uname -r) \
            gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib \
            libc6-dev lib32ncurses-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils \
            xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses-dev libsdl1.2-dev \
            build-essential libgtk-3-dev libglu1-mesa-dev freeglut3-dev git libxml2 lzop pngcrush schedtool squashfs-tools \
            imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses6 python3 tar

    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') || 
          startsWith(github.event.inputs.DEVICE_TREE_URL, 'git@github.com') ||
          startsWith(github.event.inputs.COMMON_TREE_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "TWRP-Builder"
        git config --global user.email "builder@twrp.local"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd

    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace

    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Debug - Check Device Tree Structure
      if: ${{ github.event.inputs.DEBUG_MODE == 'true' }}
      run: |
        echo "::group::Device Tree Structure Check"
        ls -la ${{ github.event.inputs.DEVICE_PATH }}/
        echo "--- BoardConfig.mk content ---"
        head -20 ${{ github.event.inputs.DEVICE_PATH }}/BoardConfig.mk
        echo "--- device.mk content ---"
        head -20 ${{ github.event.inputs.DEVICE_PATH }}/device.mk
        echo "--- Recovery structure ---"
        find ${{ github.event.inputs.DEVICE_PATH }}/recovery -type f | head -10
        echo "::endgroup::"
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Check Build Tree
      uses: haya14busa/action-cond@v1
      id: buildtree
      with:
        cond: ${{ github.event.inputs.MANIFEST_BRANCH == 'twrp-11' || github.event.inputs.MANIFEST_BRANCH == 'twrp-12.1' }}
        if_true: twrp
        if_false: omni

    - name: Sync Device Dependencies
      run: |
        if [ -f "${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies" ]; then
          echo "Found dependencies file, converting..."
          bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
          repo sync -j$(nproc --all)
        else
          echo "No dependencies file found, skipping..."
        fi
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

    - name: Debug - Check Dependencies
      if: ${{ github.event.inputs.DEBUG_MODE == 'true' }}
      run: |
        echo "::group::Dependencies Check"
        if [ -f ".repo/local_manifests/roomservice.xml" ]; then
          echo "Local manifest content:"
          cat .repo/local_manifests/roomservice.xml
        else
          echo "No local manifest found"
        fi
        echo "::endgroup::"
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Debug - Environment Setup
      if: ${{ github.event.inputs.DEBUG_MODE == 'true' }}
      run: |
        echo "::group::Environment Setup"
        source build/envsetup.sh
        echo "Environment setup completed"
        echo "Available products:"
        get_build_var TARGET_DEVICE || echo "No TARGET_DEVICE found"
        echo "::endgroup::"
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        export BUILD_BROKEN_DUP_RULES=true
        export BUILD_BROKEN_ELF_PREBUILT_PRODUCT_COPY_FILES=true
        echo "Starting build for ${{ github.event.inputs.MAKEFILE_NAME }}"
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng
        echo "Lunch completed, starting make..."
        make clean
        echo "Clean completed, building ${{ github.event.inputs.BUILD_TARGET }}image..."
        make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
        echo "Build completed!"
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Debug - Build Output Check
      if: ${{ github.event.inputs.DEBUG_MODE == 'true' }}
      run: |
        echo "::group::Build Output Check"
        echo "Checking for build artifacts..."
        find out/target/product/${{ github.event.inputs.DEVICE_NAME }} -name "*.img" -o -name "*.zip" | head -10
        echo "Build log summary:"
        tail -50 out/error.log 2>/dev/null || echo "No error log found"
        echo "::endgroup::"
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: | 
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*vendor*.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          **TWRP Recovery Build for Motorola Capri**
          
          **Build Information:**
          - Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          - Device: ${{ github.event.inputs.DEVICE_NAME }}
          - Target: ${{ github.event.inputs.BUILD_TARGET }}.img
          - Debug Mode: ${{ github.event.inputs.DEBUG_MODE }}
          
          **Device Specifications:**
          - Platform: Qualcomm Snapdragon 460 (bengal)
          - Architecture: ARM64
          - Android: 12.1 (API 31)
          
          **Features:**
          - A/B Partition Support
          - FBE/FDE Decryption
          - MTP and ADB Support
          - Multi-language Support
          
          **Build Date:** $(date)
          **Build ID:** ${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
